#!/bin/bash

set -euo pipefail
IFS=$'\n\t'

usage(){
    echo "usage : $(basename "$0") [ -d or -D ] [ install-alias ]"
    doc=(
        "lists branches that were deleted from remote"
        "" "List of flags :"
        "-h | --help displays help"
        "-d deletes branches that were deleted from remote (with no unmerged commits)"
        "-D deletes branches that were deleted from remote (even with unmerged commits, when squashing for instance)"
        ""
        "install-alias  installs gitTrim as a git global alias"
    )
    printf  "%s\n" "${doc[@]}"
}

flag=''
while (( $# ))
do
    case "$1" in
        "-h"|"--help")
            usage
            exit
            ;;
        -d)
            flag=d
            ;;
        -D)
            flag=D
            ;;
        install-alias)
            echo "# Installing globally alias trim as !gitTrim"
            echo "# Make sure gitTrim is accessible as an executable"
            echo "# For instance, you can put it in /usr/local/bin"
            echo
            echo "# Executing command :"
            echo "git config --global alias.trim '!gitTrim'"
            git config --global alias.trim '!gitTrim'
            exit 0
            ;;
    esac
    shift
done

echo "Running git fetch -p"

git fetch -p

deletedBranches=''
while read -r branch
do
    if [ "$branch" = "*" ];
    then
        echo "Warning: Your current local branch is deleted on remote." >&2
        continue
    fi
    deletedBranches="$deletedBranches, $branch"
    if [ -n "$flag" ]; then
        git branch -$flag "$branch" > /dev/null
    fi
done < <(git for-each-ref --format '%(upstream:track) %(refname)' refs/heads | awk ' $1 == "[gone]" { sub("refs/heads/", "", $2) ; print $2 }')

if [ -n "$deletedBranches" ]; then
    deletedBranches=${deletedBranches/, }
    if [ -z "$flag" ]; then
        echo "Branches to be trimmed : $deletedBranches"
    else
        echo "Trimed branches : $deletedBranches"
    fi
else
    echo "No branches to trim"
fi
