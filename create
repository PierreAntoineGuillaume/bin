#!/bin/bash

set -euo pipefail

usage() {
  echo
  echo "Usage: $(basename $0) [ +-g ] [ path ] [ -x path ] ..."
  echo
  echo "  creates all path specified in arguments."
  echo "  the last part of the path will be created as a regular file."
  echo "  said file will be added to git."
  echo
  echo "  -h --help   display this help"
  echo "  -x <path>   flag next path as executable"
  echo "  -X          flag all path as executable"
  echo
  echo "  +g          do add every file to git [default]"
  echo "  -g          don't add any file to git"
  echo
}



flat=()
executables=()
all=()
ADD_TO_GIT=true
DEFAULT_TO_EXECUTABLE=false

while (( $# )); do
  cmd=$1
  shift
  case "$cmd" in
    --help|-h)
      usage
      exit
      ;;
    -x)
      executables+=("$1")
      all+=("$1")
      shift
      ;;
    -X)
      DEFAULT_TO_EXECUTABLE=true
      ;;
    -g)
      ADD_TO_GIT=false
      ;;
    +g)
      ADD_TO_GIT=true
      ;;
    --)
      all+=("$@")
      shift $#
      ;;
    -*)
      if [ "${#cmd}" -gt 2 ]; then
        set -- "${cmd:0:2}" "-${cmd:2}" "$@"
        continue
      else
        >&2 echo "Unknown flag $cmd "
        exit 1
      fi
      ;;
    *)
      all+=("$cmd")
      ;;
  esac
done


content=$'\n'
if test ! -t 0; then
  content=$(cat -)
fi

dirsToCreate=()
for file in "${all[@]}"; do
  dir=$(dirname "$file")
  if ! [ -d "$dir" ]; then
    dirsToCreate+=("$dir")
  fi
done
if [ "${#dirsToCreate[@]}" -gt 0 ]; then
  mapfile -t dirsToCreate < <(printf "%s\n" "${dirsToCreate[@]}" | sort | uniq)
  {
    printf "Creating folders [ "
    printf "%s " "${dirsToCreate[@]}"
    printf "]\n"
  } >&2
  mkdir -p "${dirsToCreate[@]}"
fi

if $DEFAULT_TO_EXECUTABLE; then
  executables=("${all[@]}")
fi

for file in "${executables[@]}"; do
  printf "%s\n" "#!/usr/bin/env bash" "" "set -euo pipefail" >> "$file"
  chmod a+x "$file"
done

for file in "${all[@]}"; do
  echo "$content" >> "$file"
done

set +e

if $ADD_TO_GIT; then
  for file in "${all[@]}"; do
    2>/dev/null git -C "$(dirname "$file")" add "$(basename "$file")"
  done
fi
